--------------------------------------------------------
Find a value that is the same as its index in a sorted array. There might be duplicates. 

def FindIndexWithDups(arr):

	length = len(arr)
	if length == 0:
		return -1
	i = 0
	while i < length:
		if i == arr[i]: 
			return i
		elif arr[i] > i:
			if arr[i] < length:
				i = arr[i]
			else : 
				return -1
		else:
			i+=1
	if i == length:
		return -1

--------------------------------------------------------------
Return all the subsets that can be formed from a set.

class context
	arr: array	
	flags: array = False
	length : int
	res: array

def AddSet:
	subset = ()
	for i in range(length):
		if flags[i] == True:
			subset.append(arr[i])
	res.append(subset)

ctx = new context
ctx.arr = arr
ctx.length = len(arr)
ctx.flags = new arr(ctx.length, False)
ReturnSubset(ctx, 0)	


def ReturnSubset(ctx, index):
	if index >= ctx.length:
		return

	ctx.flag[index] = False
	ReturnSubset(ctx, index + 1)
	if index + 1 = ctx.length:
		ctx.AddSet

	ctx.flag[index] = True
	ReturnSubset(ctx, index + 1)
	if index + 1 = ctx.length:
		ctx.AddSet
	
------------------------------
Multiply 2 integers not using multiply operation

def Mulitiplication (a, b):
	res = 0

	for i in range(32):
		if (b & (1 << i)) != 0:
			res += (a << i)
	
	return res
------------------------------
Hanoy towel problem using 3 stacks

def Hanoy(n, from, temp, to)
	 
	if n <= 0: return
	
	Hanoy(n - 1, from, to, temp)
	to.push(from.pop)
	Hanoy(n - 1, temp, from, to)																																																																																																																												


















